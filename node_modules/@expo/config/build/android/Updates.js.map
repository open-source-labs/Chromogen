{"version":3,"file":"Updates.js","sourceRoot":"","sources":["../../src/android/Updates.ts"],"names":[],"mappings":";;AACA,yCAAwE;AAExE,SAAgB,YAAY,CAAC,MAAkB,EAAE,QAAuB;IACtE,MAAM,IAAI,GAAG,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC;IACxE,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,IAAI,CAAC;KACb;IACD,OAAO,qBAAqB,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;AACpD,CAAC;AAND,oCAMC;AAED,SAAgB,aAAa,CAAC,MAAkB;IAC9C,OAAO,OAAO,MAAM,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1E,CAAC;AAFD,sCAEC;AAED,SAAgB,iBAAiB,CAAC,MAAkB;;IAClD,OAAO,OAAA,MAAM,CAAC,OAAO,0CAAE,OAAO,MAAK,KAAK,CAAC;AAC3C,CAAC;AAFD,8CAEC;AAED,SAAgB,iBAAiB,CAAC,MAAkB;;IAClD,mBAAO,MAAM,CAAC,OAAO,0CAAE,sBAAsB,mCAAI,CAAC,CAAC;AACrD,CAAC;AAFD,8CAEC;AAED,SAAgB,uBAAuB,CAAC,MAAkB;;IACxD,IAAI,OAAA,MAAM,CAAC,OAAO,0CAAE,kBAAkB,MAAK,mBAAmB,EAAE;QAC9D,OAAO,OAAO,CAAC;KAChB;SAAM,IAAI,OAAA,MAAM,CAAC,OAAO,0CAAE,kBAAkB,MAAK,SAAS,EAAE;QAC3D,OAAO,QAAQ,CAAC;KACjB;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAPD,0DAOC;AAEM,KAAK,UAAU,gBAAgB,CACpC,MAAkB,EAClB,gBAA0B,EAC1B,QAAuB;IAEvB,MAAM,eAAe,GAAG,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAClE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,KAAK,kBAAkB,CAC1D,CAAC,CAAC,CAAC,CAAC;IAEL,2CAAgC,CAC9B,eAAe,EACf,8BAA8B,EAC9B,GAAG,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAC/B,CAAC;IACF,2CAAgC,CAC9B,eAAe,EACf,mDAAmD,EACnD,uBAAuB,CAAC,MAAM,CAAC,CAChC,CAAC;IACF,2CAAgC,CAC9B,eAAe,EACf,kDAAkD,EAClD,GAAG,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAC/B,CAAC;IAEF,MAAM,SAAS,GAAG,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACjD,IAAI,SAAS,EAAE;QACb,2CAAgC,CAC9B,eAAe,EACf,sCAAsC,EACtC,SAAS,CACV,CAAC;KACH;IACD,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;IACzC,IAAI,UAAU,EAAE;QACd,2CAAgC,CAC9B,eAAe,EACf,uCAAuC,EACvC,UAAU,CACX,CAAC;KACH;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AA3CD,4CA2CC","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { Document, addMetaDataItemToMainApplication } from './Manifest';\n\nexport function getUpdateUrl(config: ExpoConfig, username: string | null) {\n  const user = typeof config.owner === 'string' ? config.owner : username;\n  if (!user) {\n    return null;\n  }\n  return `https://exp.host/@${user}/${config.slug}`;\n}\n\nexport function getSDKVersion(config: ExpoConfig) {\n  return typeof config.sdkVersion === 'string' ? config.sdkVersion : null;\n}\n\nexport function getUpdatesEnabled(config: ExpoConfig) {\n  return config.updates?.enabled !== false;\n}\n\nexport function getUpdatesTimeout(config: ExpoConfig) {\n  return config.updates?.fallbackToCacheTimeout ?? 0;\n}\n\nexport function getUpdatesCheckOnLaunch(config: ExpoConfig) {\n  if (config.updates?.checkAutomatically === 'ON_ERROR_RECOVERY') {\n    return 'NEVER';\n  } else if (config.updates?.checkAutomatically === 'ON_LOAD') {\n    return 'ALWAYS';\n  }\n  return 'ALWAYS';\n}\n\nexport async function setUpdatesConfig(\n  config: ExpoConfig,\n  manifestDocument: Document,\n  username: string | null\n) {\n  const mainApplication = manifestDocument.manifest.application.filter(\n    (e: any) => e['$']['android:name'] === '.MainApplication'\n  )[0];\n\n  addMetaDataItemToMainApplication(\n    mainApplication,\n    'expo.modules.updates.ENABLED',\n    `${getUpdatesEnabled(config)}`\n  );\n  addMetaDataItemToMainApplication(\n    mainApplication,\n    'expo.modules.updates.EXPO_UPDATES_CHECK_ON_LAUNCH',\n    getUpdatesCheckOnLaunch(config)\n  );\n  addMetaDataItemToMainApplication(\n    mainApplication,\n    'expo.modules.updates.EXPO_UPDATES_LAUNCH_WAIT_MS',\n    `${getUpdatesTimeout(config)}`\n  );\n\n  const updateUrl = getUpdateUrl(config, username);\n  if (updateUrl) {\n    addMetaDataItemToMainApplication(\n      mainApplication,\n      'expo.modules.updates.EXPO_UPDATE_URL',\n      updateUrl\n    );\n  }\n  const sdkVersion = getSDKVersion(config);\n  if (sdkVersion) {\n    addMetaDataItemToMainApplication(\n      mainApplication,\n      'expo.modules.updates.EXPO_SDK_VERSION',\n      sdkVersion\n    );\n  }\n\n  return manifestDocument;\n}\n"]}