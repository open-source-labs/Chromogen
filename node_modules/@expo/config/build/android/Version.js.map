{"version":3,"file":"Version.js","sourceRoot":"","sources":["../../src/android/Version.ts"],"names":[],"mappings":";;AAEA,MAAM,oBAAoB,GAAG,KAAK,CAAC;AACnC,MAAM,oBAAoB,GAAG,GAAG,CAAC;AAEjC,SAAgB,cAAc,CAAC,MAAkB;IAC/C,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;AAChD,CAAC;AAFD,wCAEC;AAED,SAAgB,cAAc,CAC5B,MAAkB,EAClB,WAAmB,EACnB,gBAAgB,GAAG,oBAAoB;IAEvC,MAAM,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAI,WAAW,KAAK,IAAI,EAAE;QACxB,OAAO,WAAW,CAAC;KACpB;IAED,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,gBAAgB,gBAAgB,GAAG,CAAC,CAAC;IAChE,OAAO,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,WAAW,GAAG,CAAC,CAAC;AACtE,CAAC;AAZD,wCAYC;AAED,SAAgB,cAAc,CAAC,MAAkB;IAC/C,OAAO,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1F,CAAC;AAFD,wCAEC;AAED,SAAgB,cAAc,CAC5B,MAAkB,EAClB,WAAmB,EACnB,oBAAoB,GAAG,oBAAoB;IAE3C,MAAM,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAI,WAAW,KAAK,IAAI,EAAE;QACxB,OAAO,WAAW,CAAC;KACpB;IAED,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,eAAe,oBAAoB,EAAE,CAAC,CAAC;IAClE,OAAO,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,eAAe,WAAW,EAAE,CAAC,CAAC;AACpE,CAAC;AAZD,wCAYC","sourcesContent":["import { ExpoConfig } from '../Config.types';\n\nconst DEFAULT_VERSION_NAME = '1.0';\nconst DEFAULT_VERSION_CODE = '1';\n\nexport function getVersionName(config: ExpoConfig) {\n  return config.version ? config.version : null;\n}\n\nexport function setVersionName(\n  config: ExpoConfig,\n  buildGradle: string,\n  versionToReplace = DEFAULT_VERSION_NAME\n) {\n  const versionName = getVersionName(config);\n  if (versionName === null) {\n    return buildGradle;\n  }\n\n  const pattern = new RegExp(`versionName \"${versionToReplace}\"`);\n  return buildGradle.replace(pattern, `versionName \"${versionName}\"`);\n}\n\nexport function getVersionCode(config: ExpoConfig) {\n  return config.android && config.android.versionCode ? config.android.versionCode : null;\n}\n\nexport function setVersionCode(\n  config: ExpoConfig,\n  buildGradle: string,\n  versionCodeToReplace = DEFAULT_VERSION_CODE\n) {\n  const versionCode = getVersionCode(config);\n  if (versionCode === null) {\n    return buildGradle;\n  }\n\n  const pattern = new RegExp(`versionCode ${versionCodeToReplace}`);\n  return buildGradle.replace(pattern, `versionCode ${versionCode}`);\n}\n"]}