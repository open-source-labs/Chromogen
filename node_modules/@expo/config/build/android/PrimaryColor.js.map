{"version":3,"file":"PrimaryColor.js","sourceRoot":"","sources":["../../src/android/PrimaryColor.ts"],"names":[],"mappings":";;AACA,qCAKkB;AAClB,qCAMkB;AAElB,MAAM,iBAAiB,GAAG,cAAc,CAAC;AACzC,MAAM,qBAAqB,GAAG,SAAS,CAAC;AAExC,SAAgB,eAAe,CAAC,MAAkB;;IAChD,aAAO,MAAM,CAAC,YAAY,mCAAI,qBAAqB,CAAC;AACtD,CAAC;AAFD,0CAEC;AAEM,KAAK,UAAU,eAAe,CAAC,MAAkB,EAAE,gBAAwB;IAChF,MAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;IAE1C,MAAM,UAAU,GAAG,MAAM,qCAA4B,CAAC,gBAAgB,CAAC,CAAC;IACxE,MAAM,UAAU,GAAG,MAAM,qCAA4B,CAAC,gBAAgB,CAAC,CAAC;IACxE,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,EAAE;QAC9B,OAAO,KAAK,CAAC;KACd;IAED,IAAI,UAAU,GAAG,MAAM,2BAAkB,CAAC,UAAU,CAAC,CAAC;IACtD,IAAI,UAAU,GAAG,MAAM,2BAAkB,CAAC,UAAU,CAAC,CAAC;IAEtD,MAAM,cAAc,GAAc,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC/D,MAAM,cAAc,GAAc,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAE/D,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAChC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC;IAE7C,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,iBAAiB,EAAE,CAAC;IACpD,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC;IAE7C,UAAU,GAAG,qBAAY,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;IACtD,UAAU,GAAG,sBAAa,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;IAEvD,IAAI;QACF,MAAM,4BAAmB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAClD,MAAM,4BAAmB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;KACnD;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,KAAK,CACb,uEAAuE,UAAU,GAAG,CACrF,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAjCD,0CAiCC","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport {\n  getProjectColorsXMLPathAsync,\n  readColorsXMLAsync,\n  setColorItem,\n  writeColorsXMLAsync,\n} from './Colors';\nimport {\n  XMLItem,\n  getProjectStylesXMLPathAsync,\n  readStylesXMLAsync,\n  setStylesItem,\n  writeStylesXMLAsync,\n} from './Styles';\n\nconst COLOR_PRIMARY_KEY = 'colorPrimary';\nconst DEFAULT_PRIMARY_COLOR = '#023c69';\n\nexport function getPrimaryColor(config: ExpoConfig) {\n  return config.primaryColor ?? DEFAULT_PRIMARY_COLOR;\n}\n\nexport async function setPrimaryColor(config: ExpoConfig, projectDirectory: string) {\n  const hexString = getPrimaryColor(config);\n\n  const stylesPath = await getProjectStylesXMLPathAsync(projectDirectory);\n  const colorsPath = await getProjectColorsXMLPathAsync(projectDirectory);\n  if (!colorsPath || !stylesPath) {\n    return false;\n  }\n\n  let stylesJSON = await readStylesXMLAsync(stylesPath);\n  let colorsJSON = await readColorsXMLAsync(colorsPath);\n\n  const colorItemToAdd: XMLItem[] = [{ _: '', $: { name: '' } }];\n  const styleItemToAdd: XMLItem[] = [{ _: '', $: { name: '' } }];\n\n  colorItemToAdd[0]._ = hexString;\n  colorItemToAdd[0].$.name = COLOR_PRIMARY_KEY;\n\n  styleItemToAdd[0]._ = `@color/${COLOR_PRIMARY_KEY}`;\n  styleItemToAdd[0].$.name = COLOR_PRIMARY_KEY;\n\n  colorsJSON = setColorItem(colorItemToAdd, colorsJSON);\n  stylesJSON = setStylesItem(styleItemToAdd, stylesJSON);\n\n  try {\n    await writeColorsXMLAsync(colorsPath, colorsJSON);\n    await writeStylesXMLAsync(stylesPath, stylesJSON);\n  } catch (e) {\n    throw new Error(\n      `Error setting Android primary color. Cannot write new styles.xml to ${stylesPath}.`\n    );\n  }\n  return true;\n}\n"]}