{"version":3,"file":"Xcodeproj.js","sourceRoot":"","sources":["../../../src/ios/utils/Xcodeproj.ts"],"names":[],"mappings":";;;;;AAAA,aAAa;AACb,+BAAwC;AACxC,gDAAwB;AACxB,aAAa;AACb,iCAA2C;AAC3C,aAAa;AACb,gEAAwC;AAExC,SAAgB,cAAc,CAAC,WAAmB;IAChD,MAAM,UAAU,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;IAC9C,OAAO,cAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACnC,CAAC;AAHD,wCAGC;AAED,SAAgB,aAAa,CAAC,WAAmB;IAC/C,MAAM,KAAK,GAAG,WAAQ,CAAC,qBAAqB,EAAE;QAC5C,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,WAAW;KACjB,CAAC,CAAC;IACH,OAAO,cAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAND,sCAMC;AAKD,0EAA0E;AAC1E,uFAAuF;AACvF,gCAAgC;AAChC,SAAgB,cAAc,CAAC,QAAgB,EAAE,SAAiB,EAAE,OAAgB;IAClF,MAAM,IAAI,GAAG,IAAI,iBAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;IACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;IACtC,OAAO,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;IAC3C,OAAO,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;IACvC,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;IACxC,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IAChD,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,KAAK,CAAC,iBAAiB,SAAS,aAAa,CAAC,CAAC;KACtD;IAED,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrE,OAAO,OAAO,CAAC;AACjB,CAAC;AAdD,wCAcC;AAED;;GAEG;AACH,SAAgB,UAAU,CAAC,WAAmB;IAC5C,MAAM,YAAY,GAAG,WAAQ,CAAC,uBAAuB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;IAC7F,MAAM,CAAC,WAAW,EAAE,GAAG,iBAAiB,CAAC,GAAG,YAAY,CAAC;IAEzD,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;QAC3B,OAAO,CAAC,IAAI,CACV,gDAAgD,WAAW,iBAAiB,IAAI,CAAC,SAAS,CACxF,iBAAiB,CAClB,WAAW,CACb,CAAC;KACH;IAED,MAAM,OAAO,GAAG,eAAO,CAAC,WAAW,CAAC,CAAC;IACrC,OAAO,CAAC,SAAS,EAAE,CAAC;IACpB,OAAO,OAAO,CAAC;AACjB,CAAC;AAfD,gCAeC;AAoBD,SAAgB,iBAAiB,CAAC,OAAgB;IAChD,OAAO,OAAO,CAAC,iBAAiB,EAAE,CAAC;AACrC,CAAC;AAFD,8CAEC;AAWD,SAAgB,uBAAuB,CAAC,OAAgB;IACtD,MAAM,KAAK,GAAG,OAAO,CAAC,sBAAsB,EAAwB,CAAC;IACrE,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;SACzB,MAAM,CAAC,YAAY,CAAC;SACpB,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;AAC/B,CAAC;AALD,0DAKC;AAiBD,SAAgB,8BAA8B,CAAC,OAAgB;IAC7D,OAAO,OAAO,CAAC,8BAA8B,EAAE,CAAC;AAClD,CAAC;AAFD,wEAEC;AAED,SAAgB,aAAa,CAAC,CAAC,EAAE,WAAW,CAA4B;IACtE,OAAO,WAAW,CAAC,GAAG,KAAK,sBAAsB,CAAC;AACpD,CAAC;AAFD,sCAEC;AAED,SAAgB,aAAa,CAAC,CAAC,EAAE,WAAW,CAA4B;IACtE,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC;AAC9C,CAAC;AAFD,sCAEC;AAED,SAAgB,YAAY,CAAC,CAAC,GAAG,CAGN;IACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACnC,CAAC;AALD,oCAKC","sourcesContent":["// @ts-ignore\nimport { sync as globSync } from 'glob';\nimport path from 'path';\n// @ts-ignore\nimport { project as Project } from 'xcode';\n// @ts-ignore\nimport pbxFile from 'xcode/lib/pbxFile';\n\nexport function getProjectName(projectRoot: string) {\n  const sourceRoot = getSourceRoot(projectRoot);\n  return path.basename(sourceRoot);\n}\n\nexport function getSourceRoot(projectRoot: string) {\n  const paths = globSync('ios/*/AppDelegate.m', {\n    absolute: true,\n    cwd: projectRoot,\n  });\n  return path.dirname(paths[0]);\n}\n\n// TODO: define this type later\nexport type Pbxproj = any;\n\n// TODO(brentvatne): I couldn't figure out how to do this with an existing\n// higher level function exposed by the xcode library, but we should find out how to do\n// that and replace this with it\nexport function addFileToGroup(filepath: string, groupName: string, project: Project): Pbxproj {\n  const file = new pbxFile(filepath);\n  file.uuid = project.generateUuid();\n  file.fileRef = project.generateUuid();\n  project.addToPbxFileReferenceSection(file);\n  project.addToPbxBuildFileSection(file);\n  project.addToPbxSourcesBuildPhase(file);\n  const group = project.pbxGroupByName(groupName);\n  if (!group) {\n    throw Error(`Group by name ${groupName} not found!`);\n  }\n\n  group.children.push({ value: file.fileRef, comment: file.basename });\n  return project;\n}\n\n/**\n * Get the pbxproj for the given path\n */\nexport function getPbxproj(projectRoot: string): Pbxproj {\n  const pbxprojPaths = globSync('ios/*/project.pbxproj', { absolute: true, cwd: projectRoot });\n  const [pbxprojPath, ...otherPbxprojPaths] = pbxprojPaths;\n\n  if (pbxprojPaths.length > 1) {\n    console.warn(\n      `Found multiple pbxproject files paths, using ${pbxprojPath}. Other paths ${JSON.stringify(\n        otherPbxprojPaths\n      )} ignored.`\n    );\n  }\n\n  const project = Project(pbxprojPath);\n  project.parseSync();\n  return project;\n}\n\nexport type ProjectSection = Record<string, ProjectSectionItem>;\nexport type ProjectSectionItem = {\n  isa: string;\n  attributes: {\n    TargetAttributes: Record<\n      string,\n      {\n        DevelopmentTeam?: string;\n        ProvisioningStyle?: string;\n      }\n    >;\n  };\n  targets: {\n    value: string;\n  }[];\n};\nexport type ProjectSectionEntry = [string, ProjectSectionItem];\n\nexport function getProjectSection(project: Pbxproj): ProjectSection {\n  return project.pbxProjectSection();\n}\n\nexport type ConfigurationLists = Record<string, ConfigurationList>;\nexport type ConfigurationList = {\n  isa: string;\n  buildConfigurations: {\n    value: string;\n  }[];\n};\nexport type ConfigurationListsEntry = [string, ConfigurationList];\n\nexport function getXCConfigurationLists(project: Pbxproj): ConfigurationList[] {\n  const lists = project.pbxXCConfigurationList() as ConfigurationLists;\n  return Object.entries(lists)\n    .filter(isNotComment)\n    .map(([, value]) => value);\n}\n\nexport type ConfigurationSection = Record<string, ConfigurationSectionItem>;\nexport type ConfigurationSectionItem = {\n  isa: string;\n  buildSettings: {\n    PRODUCT_NAME?: string;\n    PRODUCT_BUNDLE_IDENTIFIER?: string;\n    PROVISIONING_PROFILE_SPECIFIER?: string;\n    TEST_HOST?: any;\n    DEVELOPMENT_TEAM?: string;\n    CODE_SIGN_IDENTITY?: string;\n    CODE_SIGN_STYLE?: string;\n  };\n};\nexport type ConfigurationSectionEntry = [string, ConfigurationSectionItem];\n\nexport function getXCBuildConfigurationSection(project: Pbxproj): ConfigurationSection {\n  return project.pbxXCBuildConfigurationSection();\n}\n\nexport function isBuildConfig([, sectionItem]: ConfigurationSectionEntry): boolean {\n  return sectionItem.isa === 'XCBuildConfiguration';\n}\n\nexport function isNotTestHost([, sectionItem]: ConfigurationSectionEntry): boolean {\n  return !sectionItem.buildSettings.TEST_HOST;\n}\n\nexport function isNotComment([key]:\n  | ConfigurationSectionEntry\n  | ProjectSectionEntry\n  | ConfigurationListsEntry): boolean {\n  return !key.endsWith(`_comment`);\n}\n"]}