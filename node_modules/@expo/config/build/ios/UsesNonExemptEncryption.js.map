{"version":3,"file":"UsesNonExemptEncryption.js","sourceRoot":"","sources":["../../src/ios/UsesNonExemptEncryption.ts"],"names":[],"mappings":";;AAGA,SAAgB,0BAA0B,CAAC,MAAkB;;IAC3D,OAAO,aAAA,MAAM,CAAC,GAAG,0CAAE,MAAM,0CAAE,cAAc,CAAC,yBAAyB,GACjE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,uBAAuB;QAC7C,CAAC,CAAC,IAAI,CAAC;AACX,CAAC;AAJD,gEAIC;AAED,SAAgB,0BAA0B,CAAC,MAAkB,EAAE,SAAoB;IACjF,MAAM,uBAAuB,GAAG,0BAA0B,CAAC,MAAM,CAAC,CAAC;IAEnE,2CAA2C;IAC3C,IAAI,uBAAuB,KAAK,IAAI,EAAE;QACpC,OAAO,SAAS,CAAC;KAClB;IAED,uCACK,SAAS,KACZ,6BAA6B,EAAE,uBAAuB,IACtD;AACJ,CAAC;AAZD,gEAYC","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { InfoPlist } from './IosConfig.types';\n\nexport function getUsesNonExemptEncryption(config: ExpoConfig) {\n  return config.ios?.config?.hasOwnProperty('usesNonExemptEncryption')\n    ? !!config.ios.config.usesNonExemptEncryption\n    : null;\n}\n\nexport function setUsesNonExemptEncryption(config: ExpoConfig, infoPlist: InfoPlist) {\n  const usesNonExemptEncryption = getUsesNonExemptEncryption(config);\n\n  // Make no changes if the key is left blank\n  if (usesNonExemptEncryption === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    ITSAppUsesNonExemptEncryption: usesNonExemptEncryption,\n  };\n}\n"]}