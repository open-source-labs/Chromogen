{"version":3,"file":"Facebook.js","sourceRoot":"","sources":["../../src/ios/Facebook.ts"],"names":[],"mappings":"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","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { InfoPlist } from './IosConfig.types';\nimport { appendScheme } from './Scheme';\n\n/**\n * Getters\n * TODO: these getters are the same between ios/android, we could reuse them\n */\n\nexport function getFacebookScheme(config: ExpoConfig) {\n  return config.facebookScheme ?? null;\n}\n\nexport function getFacebookAppId(config: ExpoConfig) {\n  return config.facebookAppId ?? null;\n}\n\nexport function getFacebookDisplayName(config: ExpoConfig) {\n  return config.facebookDisplayName ?? null;\n}\nexport function getFacebookAutoInitEnabled(config: ExpoConfig) {\n  return config.hasOwnProperty('facebookAutoInitEnabled') ? config.facebookAutoInitEnabled : null;\n}\n\nexport function getFacebookAutoLogAppEvents(config: ExpoConfig) {\n  return config.hasOwnProperty('facebookAutoLogAppEventsEnabled')\n    ? config.facebookAutoLogAppEventsEnabled\n    : null;\n}\n\nexport function getFacebookAdvertiserIDCollection(config: ExpoConfig) {\n  return config.hasOwnProperty('facebookAdvertiserIDCollectionEnabled')\n    ? config.facebookAdvertiserIDCollectionEnabled\n    : null;\n}\n\n/**\n * Setters\n */\n\nexport function setFacebookConfig(config: ExpoConfig, infoPlist: InfoPlist) {\n  infoPlist = setFacebookAppId(config, infoPlist);\n  infoPlist = setFacebookApplicationQuerySchemes(config, infoPlist);\n  infoPlist = setFacebookDisplayName(config, infoPlist);\n  infoPlist = setFacebookAutoInitEnabled(config, infoPlist);\n  infoPlist = setFacebookAutoLogAppEventsEnabled(config, infoPlist);\n  infoPlist = setFacebookAdvertiserIDCollectionEnabled(config, infoPlist);\n  infoPlist = setFacebookScheme(config, infoPlist);\n  return infoPlist;\n}\n\nexport function setFacebookScheme(config: ExpoConfig, infoPlist: InfoPlist) {\n  const facebookScheme = getFacebookScheme(config);\n  return appendScheme(facebookScheme, infoPlist);\n}\n\nexport function setFacebookAutoInitEnabled(config: ExpoConfig, infoPlist: InfoPlist) {\n  const facebookAutoInitEnabled = getFacebookAutoInitEnabled(config);\n\n  if (facebookAutoInitEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAutoInitEnabled: facebookAutoInitEnabled,\n  };\n}\n\nexport function setFacebookAutoLogAppEventsEnabled(config: ExpoConfig, infoPlist: InfoPlist) {\n  const facebookAutoLogAppEventsEnabled = getFacebookAutoLogAppEvents(config);\n\n  if (facebookAutoLogAppEventsEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAutoLogAppEventsEnabled: facebookAutoLogAppEventsEnabled,\n  };\n}\n\nexport function setFacebookAdvertiserIDCollectionEnabled(config: ExpoConfig, infoPlist: InfoPlist) {\n  const facebookAdvertiserIDCollectionEnabled = getFacebookAdvertiserIDCollection(config);\n\n  if (facebookAdvertiserIDCollectionEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAdvertiserIDCollectionEnabled: facebookAdvertiserIDCollectionEnabled,\n  };\n}\n\nexport function setFacebookAppId(config: ExpoConfig, infoPlist: InfoPlist) {\n  const facebookAppId = getFacebookAppId(config);\n  if (facebookAppId) {\n    return {\n      ...infoPlist,\n      FacebookAppID: facebookAppId,\n    };\n  }\n\n  return infoPlist;\n}\n\nexport function setFacebookDisplayName(config: ExpoConfig, infoPlist: InfoPlist) {\n  const facebookDisplayName = getFacebookDisplayName(config);\n\n  if (facebookDisplayName) {\n    return {\n      ...infoPlist,\n      FacebookDisplayName: facebookDisplayName,\n    };\n  }\n\n  return infoPlist;\n}\n\nexport function setFacebookApplicationQuerySchemes(config: ExpoConfig, infoPlist: InfoPlist) {\n  const facebookAppId = getFacebookAppId(config);\n\n  if (!facebookAppId) {\n    return infoPlist;\n  }\n\n  const existingSchemes = infoPlist.LSApplicationQueriesSchemes || [];\n\n  // already inlcuded, no need to add again\n  if (existingSchemes.includes('fbapi')) {\n    return infoPlist;\n  }\n\n  // TODO: it's actually necessary to add more query schemes (specific to the\n  // app) to support all of the features that the Facebook SDK provides, should\n  // we sync those here too?\n  const updatedSchemes = [\n    ...existingSchemes,\n    'fbapi',\n    'fb-messenger-api',\n    'fbauth2',\n    'fbshareextension',\n  ];\n\n  return {\n    ...infoPlist,\n    LSApplicationQueriesSchemes: updatedSchemes,\n  };\n}\n"]}