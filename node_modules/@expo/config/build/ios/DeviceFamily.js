"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WarningAggregator_1 = require("../WarningAggregator");
function getSupportsTablet(config) {
    var _a, _b;
    if ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.supportsTablet) {
        return (_b = config.ios) === null || _b === void 0 ? void 0 : _b.supportsTablet;
    }
    return false;
}
exports.getSupportsTablet = getSupportsTablet;
function getIsTabletOnly(config) {
    var _a;
    if ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.isTabletOnly) {
        return config.ios.isTabletOnly;
    }
    return false;
}
exports.getIsTabletOnly = getIsTabletOnly;
function getDeviceFamilies(config) {
    const supportsTablet = getSupportsTablet(config);
    const isTabletOnly = getIsTabletOnly(config);
    // 1 is iPhone, 2 is iPad
    if (isTabletOnly) {
        return [2];
    }
    else if (supportsTablet) {
        return [1, 2];
    }
    else {
        return [1];
    }
}
exports.getDeviceFamilies = getDeviceFamilies;
/**
 * Add to pbxproj under TARGETED_DEVICE_FAMILY
 */
function setDeviceFamily(config, projectRoot) {
    const supportsTablet = getSupportsTablet(config);
    const isTabletOnly = getIsTabletOnly(config);
    if (isTabletOnly) {
        WarningAggregator_1.addWarningIOS('isTabletOnly', 'You will need to configure this in the "General" tab for your project target in Xcode.');
    }
    else if (supportsTablet) {
        WarningAggregator_1.addWarningIOS('supportsTablet', 'You will need to configure this in the "General" tab for your project target in Xcode.');
    }
    // TODO: we might need to actually fork the "xcode" package to make this work
    // See: https://github.com/apache/cordova-node-xcode/issues/86
    //
    // const project = getPbxproj(projectRoot);
    // Object.entries(project.pbxXCBuildConfigurationSection())
    //   .filter(removeComments)
    //   .filter(isBuildConfig)
    //   .filter(removeTestHosts)
    //   .forEach(({ 1: { buildSettings } }: any) => {
    //     buildSettings.TARGETED_DEVICE_FAMILY = '1';
    //   });
    // fs.writeFileSync(project.filepath, project.writeSync());
}
exports.setDeviceFamily = setDeviceFamily;
//# sourceMappingURL=DeviceFamily.js.map