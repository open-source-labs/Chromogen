{"version":3,"file":"RequiresFullScreen.js","sourceRoot":"","sources":["../../src/ios/RequiresFullScreen.ts"],"names":[],"mappings":";;AAGA,gFAAgF;AAChF,+EAA+E;AAC/E,yBAAyB;AACzB,SAAgB,qBAAqB,CAAC,MAAkB;;IACtD,oFAAoF;IACpF,4EAA4E;IAC5E,UAAI,MAAM,CAAC,GAAG,0CAAE,cAAc,CAAC,mBAAmB,GAAG;QACnD,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC;KACvC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AARD,sDAQC;AAED,uCAAuC;AACvC,SAAgB,qBAAqB,CAAC,MAAkB,EAAE,SAAoB;IAC5E,uCACK,SAAS,KACZ,oBAAoB,EAAE,qBAAqB,CAAC,MAAM,CAAC,IACnD;AACJ,CAAC;AALD,sDAKC","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { InfoPlist } from './IosConfig.types';\n\n// NOTES: This is defaulted to `true` for now to match the behavior prior to SDK\n// 34, but will change to `false` in a future SDK version. This note was copied\n// over from IosNSBundle.\nexport function getRequiresFullScreen(config: ExpoConfig) {\n  // Yes, the proeprty is called ios.requireFullScreen, without the s - not \"requires\"\n  // This is confusing indeed because the actual property name does have the s\n  if (config.ios?.hasOwnProperty('requireFullScreen')) {\n    return !!config.ios.requireFullScreen;\n  } else {\n    return true;\n  }\n}\n\n// Whether requires full screen on iPad\nexport function setRequiresFullScreen(config: ExpoConfig, infoPlist: InfoPlist) {\n  return {\n    ...infoPlist,\n    UIRequiresFullScreen: getRequiresFullScreen(config),\n  };\n}\n"]}