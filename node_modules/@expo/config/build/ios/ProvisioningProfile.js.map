{"version":3,"file":"ProvisioningProfile.js","sourceRoot":"","sources":["../../src/ios/ProvisioningProfile.ts"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAE1B,iDAU2B;AAO3B,SAAS,gCAAgC,CACvC,WAAmB,EACnB,EAAE,WAAW,EAAE,WAAW,EAA+B;IAEzD,MAAM,OAAO,GAAG,sBAAU,CAAC,WAAW,CAAC,CAAC;IAExC,MAAM,kBAAkB,GAAG,mCAAuB,CAAC,OAAO,CAAC,CAAC;IAC5D,qGAAqG;IACrG,MAAM,mBAAmB,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAExF,MAAM,CAAC,OAAO,CAAC,0CAA8B,CAAC,OAAO,CAAC,CAAC;SACpD,MAAM,CAAC,wBAAY,CAAC;SACpB,MAAM,CAAC,yBAAa,CAAC;SACrB,MAAM,CAAC,yBAAa,CAAC;SACrB,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAA4B,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;SAChF,MAAM,CAAC,CAAC,CAAC,GAAG,CAA4B,EAAE,EAAE,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC/E,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAA4B,EAAE,EAAE;QAC/C,IAAI,CAAC,aAAa,CAAC,8BAA8B,GAAG,IAAI,WAAW,GAAG,CAAC;QACvE,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,WAAW,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,uBAAuB,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,QAAQ,CAAC;IAChD,CAAC,CAAC,CAAC;IAEL,MAAM,CAAC,OAAO,CAAC,6BAAiB,CAAC,OAAO,CAAC,CAAC;SACvC,MAAM,CAAC,wBAAY,CAAC;SACpB,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAsB,EAAE,EAAE;QACzC,uFAAuF;QACvF,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC;QACzE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,iBAAiB,GAAG,QAAQ,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEL,kBAAE,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;AAC1D,CAAC;AAEQ,4EAAgC","sourcesContent":["import fs from 'fs-extra';\n\nimport {\n  ConfigurationSectionEntry,\n  ProjectSectionEntry,\n  getPbxproj,\n  getProjectSection,\n  getXCBuildConfigurationSection,\n  getXCConfigurationLists,\n  isBuildConfig,\n  isNotComment,\n  isNotTestHost,\n} from './utils/Xcodeproj';\n\ntype ProvisioningProfileSettings = {\n  appleTeamId: string;\n  profileName: string;\n};\n\nfunction setProvisioningProfileForPbxproj(\n  projectRoot: string,\n  { profileName, appleTeamId }: ProvisioningProfileSettings\n): void {\n  const project = getPbxproj(projectRoot);\n\n  const configurationLists = getXCConfigurationLists(project);\n  // TODO(dsokal): figure out if configuring only the entries from the first configuration list is fine\n  const buildConfigurations = configurationLists[0].buildConfigurations.map(i => i.value);\n\n  Object.entries(getXCBuildConfigurationSection(project))\n    .filter(isNotComment)\n    .filter(isBuildConfig)\n    .filter(isNotTestHost)\n    .filter(([, item]: ConfigurationSectionEntry) => item.buildSettings.PRODUCT_NAME)\n    .filter(([key]: ConfigurationSectionEntry) => buildConfigurations.includes(key))\n    .forEach(([, item]: ConfigurationSectionEntry) => {\n      item.buildSettings.PROVISIONING_PROFILE_SPECIFIER = `\"${profileName}\"`;\n      item.buildSettings.DEVELOPMENT_TEAM = appleTeamId;\n      item.buildSettings.CODE_SIGN_IDENTITY = '\"iPhone Distribution\"';\n      item.buildSettings.CODE_SIGN_STYLE = 'Manual';\n    });\n\n  Object.entries(getProjectSection(project))\n    .filter(isNotComment)\n    .forEach(([, item]: ProjectSectionEntry) => {\n      // TODO(dsokal): figure out if we need to configure anything else than the first target\n      const targetId = item.targets[0].value;\n      item.attributes.TargetAttributes[targetId].DevelopmentTeam = appleTeamId;\n      item.attributes.TargetAttributes[targetId].ProvisioningStyle = 'Manual';\n    });\n\n  fs.writeFileSync(project.filepath, project.writeSync());\n}\n\nexport { setProvisioningProfileForPbxproj };\n"]}