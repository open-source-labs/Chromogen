{"version":3,"file":"Google.js","sourceRoot":"","sources":["../../src/ios/Google.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport { ExpoConfig } from '../Config.types';\nimport { InfoPlist } from './IosConfig.types';\nimport { appendScheme } from './Scheme';\nimport { addFileToGroup, getPbxproj, getProjectName, getSourceRoot } from './utils/Xcodeproj';\n\nexport function getGoogleMapsApiKey(config: ExpoConfig) {\n  return config.ios?.config?.googleMapsApiKey ?? null;\n}\n\n// NOTE(brentvatne): if the developer has installed the google ads sdk and does\n// not provide an app id their app will crash. Standalone apps get around this by\n// providing some default value, we will instead here assume that the user can\n// do the right thing if they have installed the package. This is a slight discrepancy\n// that arises in ejecting because it's possible for the package to be installed and\n// not crashing in the managed workflow, then you eject and the app crashes because\n// you don't have an id to fall back to.\nexport function getGoogleMobileAdsAppId(config: ExpoConfig) {\n  return config.ios?.config?.googleMobileAdsAppId ?? null;\n}\n\nexport function getGoogleSignInReservedClientId(config: ExpoConfig) {\n  return config.ios?.config?.googleSignIn?.reservedClientId ?? null;\n}\n\nexport function getGoogleServicesFile(config: ExpoConfig) {\n  return config.ios?.googleServicesFile ?? null;\n}\n\nexport function setGoogleMapsApiKey(config: ExpoConfig, infoPlist: InfoPlist) {\n  const apiKey = getGoogleMapsApiKey(config);\n\n  if (apiKey === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    GMSApiKey: apiKey,\n  };\n}\n\nexport function setGoogleMobileAdsAppId(config: ExpoConfig, infoPlist: InfoPlist) {\n  const appId = getGoogleMobileAdsAppId(config);\n\n  if (appId === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    GADApplicationIdentifier: appId,\n  };\n}\n\nexport function setGoogleSignInReservedClientId(config: ExpoConfig, infoPlist: InfoPlist) {\n  const reservedClientId = getGoogleSignInReservedClientId(config);\n\n  if (reservedClientId === null) {\n    return infoPlist;\n  }\n\n  return appendScheme(reservedClientId, infoPlist);\n}\n\nexport function setGoogleConfig(config: ExpoConfig, infoPlist: InfoPlist) {\n  infoPlist = setGoogleMapsApiKey(config, infoPlist);\n  infoPlist = setGoogleMobileAdsAppId(config, infoPlist);\n  infoPlist = setGoogleSignInReservedClientId(config, infoPlist);\n  return infoPlist;\n}\n\nexport function setGoogleServicesFile(config: ExpoConfig, projectRoot: string) {\n  const googleServicesFileRelativePath = getGoogleServicesFile(config);\n  if (googleServicesFileRelativePath === null) {\n    return;\n  }\n\n  const googleServiceFilePath = path.resolve(projectRoot, googleServicesFileRelativePath);\n  fs.copyFileSync(\n    googleServiceFilePath,\n    path.join(getSourceRoot(projectRoot), 'GoogleService-Info.plist')\n  );\n\n  let project = getPbxproj(projectRoot);\n  const projectName = getProjectName(projectRoot);\n  project = addFileToGroup(`${projectName}/GoogleService-Info.plist`, projectName, project);\n  fs.writeFileSync(project.filepath, project.writeSync());\n}\n"]}